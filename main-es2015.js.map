{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/constants/storage-keys.ts","./src/app/core/header/header-actions.service.ts","./src/app/core/header/header.component.ts","./src/app/core/header/header.module.ts","./src/app/core/side-nav/side-nav.component.ts","./src/app/core/side-nav/side-nav.module.ts","./src/app/services/app-settings.service.ts","./src/app/services/local-forage.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,GAAG,EAAE,CACjB,4TAAsC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KACpE;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,GAAG,EAAE,CACjB,4OAA4C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;KAC7E;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,GAAG,EAAE,CACjB,oUAAwC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;KACvE;IACD;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,GAAG,EAAE,CACjB,oUAAwC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;KACvE;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,UAAU,EAAE,SAAS;KACtB;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,EAAE;KACf;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC1CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AAEtC;;;;;;;;;AAmC9B,MAAM,YAAY;IAEvB,YACU,WAA+B,EAC/B,gBAAkC;QADlC,gBAAW,GAAX,WAAW,CAAoB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAkB;IACzC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAC9B,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC;YACrE,gBAAgB,CAAC,SAAS,GAAG,uBAAuB,CAAC;YACrD,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,SAAS;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACpE,CAAC;;wEAlBU,YAAY;4FAAZ,YAAY;;QA5BrB,yEACE;;QAAA,gFAAqD;QAAzC,sRAAU,YAAgB,IAAC;QAAC,4DAAa;QACrD,wFACE;QAAA,oFACE;QAAA,0EAA6B;QAC/B,4DAAc;QACd,sFACE;QAAA,uEACE;QAAA,2EAA+B;QACjC,4DAAO;QACT,4DAAsB;QACxB,4DAAwB;QAC1B,4DAAM;;QAZkC,sJAAkC;QAGpC,0DAAe;QAAf,wEAAe;;6FAyB5C,YAAY;cA/BxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE;;;;;;;;;;;;;;GAcT;gBACD,MAAM,EAAE;oBACN;;;;KAIC;oBACD;;;;KAIC;iBACF;gBACD,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACoB;AACH;AACqB;AACvB;AACT;AACY;AACK;;AAgBzD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YATJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0EAAgB;YAChB,4FAAuB;YACvB,eAAe;YACf,uEAAY;YACZ,4EAAa;SACd;mIAIU,SAAS,mBAbL,2DAAY,aAEzB,uEAAa;QACb,oEAAgB;QAChB,0EAAgB;QAChB,4FAAuB;QACvB,eAAe;QACf,uEAAY;QACZ,4EAAa;6FAKJ,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,CAAC;gBAC5B,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0EAAgB;oBAChB,4FAAuB;oBACvB,eAAe;oBACf,uEAAY;oBACZ,4EAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;;GAEG;AACH,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,oCAAqB;IACrB,8BAAe;AACjB,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAwD;AACP;;AAK1C,MAAM,oBAAoB;IAHjC;QAIE;;WAEG;QACK,kBAAa,GAAG,IAAI,kDAAa,CAAmB,CAAC,CAAC,CAAC;KAchE;IAZC,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IAEM,eAAe,CAAC,WAA6B;QAClD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;;wFAhBU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOuB;;;;;;;;;IAqBb,mEACe;;;AAkBlB,MAAM,eAAe;IAG1B,YAAoB,aAAmC;QAAnC,kBAAa,GAAb,aAAa,CAAsB;QAF7C,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEoB,CAAC;IAE3D,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACjD,CAAC;IAEO,iBAAiB;QACvB,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;IACzC,CAAC;;8EAXU,eAAe;+FAAf,eAAe;QAjCxB,iFACE;QAAA,0EACE;QAAA,4EAOE;QAFA,uIAAS,iBAAa,IAAC;QAEvB,2EAAU;QAAA,+DAAI;QAAA,4DAAW;QAC3B,4DAAS;QAET,0EACE;QACA,6HACA;;QACF,4DAAO;QACT,4DAAO;QACP,uEACE;QAAA,uEAME;QAAA,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC/B,4DAAI;QACN,4DAAO;QACT,4DAAc;;QAdM,0DAA0C;QAA1C,iKAA0C;QAQxD,0DAA4B;QAA5B,6IAA4B;;6FAWzB,eAAe;cApC3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BT;gBACD,MAAM,EAAE,EAAE;gBACV,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;kBAEE,oDAAM;;;;;;;;;;;;;;AChDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AACkB;AACJ;AACM;AACR;AACN;;AAcxC,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBAVd;YACP,4DAAY;YACZ,4DAAY;YACZ,mBAAmB;YACnB,0EAAgB;YAChB,wEAAe;YACf,oEAAa;SACd;mIAGU,YAAY,mBAXR,iEAAe,aAE5B,4DAAY;QACZ,4DAAY;QACZ,mBAAmB;QACnB,0EAAgB;QAChB,wEAAe;QACf,oEAAa,aAEL,iEAAe;6FAEd,YAAY;cAZxB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,iEAAe,CAAC;gBAC/B,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;oBACZ,mBAAmB;oBACnB,0EAAgB;oBAChB,wEAAe;oBACf,oEAAa;iBACd;gBACD,OAAO,EAAE,CAAC,iEAAe,CAAC;aAC3B;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;;;;;;;;;;AA6CpE,MAAM,gBAAgB;IAC3B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;gFAHR,gBAAgB;gGAAhB,gBAAgB;QAxCzB,sEACE;QAAA,kFACE;QAAA,uEACE;QAAA,uEACE;QAAA,2EACE;QAAA,mEACF;QAAA,4DAAW;QACb,4DAAO;QACP,0EACE;QAAA,mEACF;QAAA,4DAAO;QACT,4DAAI;QACJ,uEACE;QAAA,uEACE;QAAA,4EACE;QAAA,oEACF;QAAA,4DAAW;QACb,4DAAO;QACP,2EACE;QAAA,mEACF;QAAA,4DAAO;QACT,4DAAI;QACJ,wEACE;QAAA,wEACE;QAAA,4EACE;QAAA,sEACF;QAAA,4DAAW;QACb,4DAAO;QACP,2EACE;QAAA,sEACF;QAAA,4DAAO;QACT,4DAAI;QACJ,0EAA2B;QAE7B,4DAAe;QACjB,4DAAM;;QAjCe,0DAA0B;QAA1B,6IAA0B;QAU1B,0DAAyB;QAAzB,6IAAyB;QAUzB,0DAA4B;QAA5B,6IAA4B;;6FAkBxC,gBAAgB;cA3C5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqCT;gBACD,MAAM,EAAE,EAAE;gBACV,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AACkB;AACJ;AACA;AACR;AACS;;AAcjD,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBAVf;YACP,4DAAY;YACZ,4DAAY;YACZ,mBAAmB;YACnB,oEAAa;YACb,wEAAe;YACf,oEAAa;SACd;mIAGU,aAAa,mBAXT,oEAAgB,aAE7B,4DAAY;QACZ,4DAAY;QACZ,mBAAmB;QACnB,oEAAa;QACb,wEAAe;QACf,oEAAa,aAEL,oEAAgB;6FAEf,aAAa;cAZzB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,oEAAgB,CAAC;gBAChC,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;oBACZ,mBAAmB;oBACnB,oEAAa;oBACb,wEAAe;oBACf,oEAAa;iBACd;gBACD,OAAO,EAAE,CAAC,oEAAgB,CAAC;aAC5B;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACM;AACO;AAGG;;;AAIpD,MAAM,kBAAkB;IAQ7B,YAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;QAF5C,cAAS,GAAG,IAAI,kDAAa,CAAc,CAAC,CAAC,CAAC;QAGnD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,CACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CACzD,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE,CACpC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mEAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACzD,CAAC;QACF,WAAW,CAAC,GAAG,CAAC,mEAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAqB,EAAE,EAAE;YACnE,IAAI,QAAQ,EAAE;gBACZ,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtC;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC;IACD;;OAEG;IACI,MAAM,CAAC,QAA8B;QAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,iCAAM,WAAW,GAAK,QAAQ,EAAG,CAAC,EACvD,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAChD,gEAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAChC,CAAC;IACJ,CAAC;IACD;;OAEG;IACI,WAAW;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;;AAtCa,mCAAgB,GAAgB;IAC5C,QAAQ,EAAE,MAAM;IAChB,KAAK,EAAE,YAAY;IACnB,eAAe,EAAE,IAAI;CACtB,CAAC;oFALS,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACL;AACD;;AAK9B,MAAM,kBAAkB;IAa7B;QAZA;;WAEG;QACI,aAAQ,GAAG,kDAAW,CAAC;QAC9B;;WAEG;QACI,WAAM,GAAG,iDAAI,CAAC,kDAAW,CAAC,KAAK,EAAE,CAAC,CAAC;QAC1C;;WAEG;QACI,eAAU,GAAG,IAAI,4CAAO,EAAE,CAAC;QAEhC,kDAAW,CAAC,MAAM,CAAC;YACjB,MAAM,EAAE,kDAAW,CAAC,SAAS;YAC7B,IAAI,EAAE,wBAAwB;YAC9B,OAAO,EAAE,GAAG;YACZ,SAAS,EAAE,aAAa;YACxB,WAAW,EAAE,kBAAkB;SAChC,CAAC,CAAC;IACL,CAAC;IAEM,GAAG,CAAU,GAAW;QAC7B,OAAO,kDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAEM,OAAO,CAAU,GAAW,EAAE,KAAQ;QAC3C,OAAO,kDAAW,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAEM,UAAU,CAAC,GAAW;QAC3B,OAAO,kDAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAEM,KAAK;QACV,OAAO,kDAAW,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;;oFArCU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'files',\n    pathMatch: 'full',\n    loadChildren: () =>\n      import('./modules/files/files.module').then((m) => m.FilesModule)\n  },\n  {\n    path: 'settings',\n    pathMatch: 'full',\n    loadChildren: () =>\n      import('./modules/settings/settings.module').then((m) => m.SettingsModule)\n  },\n  {\n    path: 'editor',\n    pathMatch: 'full',\n    loadChildren: () =>\n      import('./modules/editor/editor.module').then((m) => m.EditorModule)\n  },\n  {\n    path: 'editor/:id',\n    pathMatch: 'full',\n    loadChildren: () =>\n      import('./modules/editor/editor.module').then((m) => m.EditorModule)\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/editor'\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AppSettingsService } from './services/app-settings.service';\nimport { OverlayContainer } from '@angular/cdk/overlay';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"mat-typography full-height\" [ngClass]=\"(theme$ | async) || ''\">\n      <app-header (toggle)=\"sidenav.toggle()\"></app-header>\n      <mat-sidenav-container>\n        <mat-sidenav #sidenav mode=\"side\" [opened]=\"true\">\n          <app-side-nav></app-side-nav>\n        </mat-sidenav>\n        <mat-sidenav-content>\n          <main>\n            <router-outlet></router-outlet>\n          </main>\n        </mat-sidenav-content>\n      </mat-sidenav-container>\n    </div>\n  `,\n  styles: [\n    `\n      mat-sidenav {\n        width: 15vw;\n      }\n    `,\n    `\n      mat-sidenav-container {\n        height: calc(100% - 64px);\n      }\n    `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  public theme$!: Observable<string>;\n  constructor(\n    private appSettings: AppSettingsService,\n    private overlayContainer: OverlayContainer\n  ) {}\n\n  ngOnInit() {\n    this.theme$ = this.getTheme$();\n    this.theme$.subscribe((theme) => {\n      const containerElement = this.overlayContainer.getContainerElement();\n      containerElement.className = 'cdk-overlay-container';\n      containerElement.classList.add(theme);\n    });\n  }\n\n  private getTheme$() {\n    return this.appSettings.settings$.pipe(map(({ theme }) => theme));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderModule } from './core/header/header.module';\nimport { SideNavModule } from './core/side-nav/side-nav.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    BrowserAnimationsModule,\n    // Core Modules\n    HeaderModule,\n    SideNavModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","/**\n * These are the top level keys we use via local-forage\n */\nexport enum StorageKeys {\n  SETTINGS = 'settings',\n  FILES = 'files'\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderActionsService {\n  /**\n   * The current template to display\n   */\n  private _templateRef$ = new ReplaySubject<TemplateRef<any>>(1);\n\n  public get templateRef$(): Observable<TemplateRef<any>> {\n    return this._templateRef$.asObservable();\n  }\n\n  public setTemplateRef$(templateRef: TemplateRef<any>) {\n    this._templateRef$.next(templateRef);\n  }\n\n  public clear() {\n    this._templateRef$.next();\n  }\n  // TODO: Add logic to render a dynamic component in the header\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HeaderActionsService } from './header-actions.service';\n\n@Component({\n  selector: 'app-header',\n  template: `\n    <mat-toolbar color=\"primary\" class=\"flex-layout-row\">\n      <span class=\"flex-100 flex-layout-row\">\n        <button\n          aria-label=\"Toggle navigation Bar\"\n          title=\"Toggle navigation bar\"\n          type=\"button\"\n          mat-icon-button\n          (click)=\"toggle.emit()\"\n        >\n          <mat-icon>menu</mat-icon>\n        </button>\n        <!-- NOTE Not sure why this is needed -->\n        <span class=\"flex-layout-row full-width\">\n          <!-- TODO: Add dynamic component here -->\n          <ng-container *ngTemplateOutlet=\"headerActions$ | async\">\n          </ng-container>\n        </span>\n      </span>\n      <span>\n        <a\n          aria-label=\"Settings\"\n          title=\"Settings\"\n          [routerLink]=\"['/settings']\"\n          mat-icon-button\n        >\n          <mat-icon>settings</mat-icon>\n        </a>\n      </span>\n    </mat-toolbar>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n  @Output() toggle = new EventEmitter();\n  public headerActions$!: Observable<TemplateRef<any>>;\n  constructor(private headerActions: HeaderActionsService) {}\n\n  ngOnInit(): void {\n    this.headerActions$ = this.getHeaderActions$();\n  }\n\n  private getHeaderActions$(): Observable<TemplateRef<any>> {\n    return this.headerActions.templateRef$;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { HeaderComponent } from './header.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    // Angular Material\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-nav',\n  template: `\n    <div>\n      <mat-nav-list dense>\n        <a mat-list-item [routerLink]=\"['/editor']\">\n          <span>\n            <mat-icon>\n              create\n            </mat-icon>\n          </span>\n          <span matLine>\n            Create\n          </span>\n        </a>\n        <a mat-list-item [routerLink]=\"['/files']\">\n          <span>\n            <mat-icon>\n              folder\n            </mat-icon>\n          </span>\n          <span matLine>\n            Files\n          </span>\n        </a>\n        <a mat-list-item [routerLink]=\"['/settings']\">\n          <span>\n            <mat-icon>\n              settings\n            </mat-icon>\n          </span>\n          <span matLine>\n            Settings\n          </span>\n        </a>\n        <mat-divider></mat-divider>\n        <!-- TODO: Add list of files \"opened\" here -->\n      </mat-nav-list>\n    </div>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SideNavComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { SideNavComponent } from './side-nav.component';\n\n@NgModule({\n  declarations: [SideNavComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    // Angular Material\n    MatListModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  exports: [SideNavComponent]\n})\nexport class SideNavModule {}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { StorageKeys } from '../constants/storage-keys';\nimport { AppSettings } from '../models/app-settings';\nimport { LocalForageService } from './local-forage.service';\nimport { take, map, tap, switchMap } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppSettingsService {\n  public static DEFAULT_SETTINGS: AppSettings = {\n    fontSize: '14px',\n    theme: 'dark-theme',\n    testSuiteHidden: true\n  };\n  public settings$ = new ReplaySubject<AppSettings>(1);\n\n  constructor(private localForage: LocalForageService) {\n    this.localForage.removeAll$.subscribe(() =>\n      this.settings$.next(AppSettingsService.DEFAULT_SETTINGS)\n    );\n    this.settings$.subscribe((settings) =>\n      this.localForage.setItem(StorageKeys.SETTINGS, settings)\n    );\n    localForage.get(StorageKeys.SETTINGS).then((settings: AppSettings) => {\n      if (settings) {\n        return this.settings$.next(settings);\n      }\n      this.settings$.next(AppSettingsService.DEFAULT_SETTINGS);\n    });\n  }\n  /**\n   * Updates all or part of the app-settings\n   */\n  public update(settings: Partial<AppSettings>): Observable<AppSettings> {\n    return this.settings$.pipe(\n      take(1),\n      map((oldSettings) => ({ ...oldSettings, ...settings })),\n      tap((settings) => this.settings$.next(settings)),\n      switchMap(() => this.settings$)\n    );\n  }\n  /**\n   * Resets all settings to their defaults\n   */\n  public setDefaults() {\n    this.settings$.next(AppSettingsService.DEFAULT_SETTINGS);\n    return this.settings$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport localForage from 'localforage';\nimport { from, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalForageService {\n  /**\n   * The underlying instance of localForage.\n   */\n  public instance = localForage;\n  /**\n   * If the local forage is ready\n   */\n  public ready$ = from(localForage.ready());\n  /**\n   * Subject that emits if we delete EVERYTHING.\n   */\n  public removeAll$ = new Subject();\n  constructor() {\n    localForage.config({\n      driver: localForage.INDEXEDDB, // Force WebSQL; same as using setDriver()\n      name: 'fcc-markdown-previewer',\n      version: 1.0,\n      storeName: 'client_data', // Should be alphanumeric, with underscores.\n      description: 'client-side data'\n    });\n  }\n\n  public get<T = any>(key: string): Promise<T> {\n    return localForage.getItem(key);\n  }\n\n  public setItem<T = any>(key: string, value: T): Promise<T> {\n    return localForage.setItem(key, value);\n  }\n\n  public removeItem(key: string): Promise<void> {\n    return localForage.removeItem(key);\n  }\n\n  public clear(): Promise<void> {\n    return localForage.clear();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}