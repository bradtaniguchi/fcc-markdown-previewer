{"version":3,"sources":["webpack:///home/runner/work/fcc-markdown-previewer/fcc-markdown-previewer/node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///home/runner/work/fcc-markdown-previewer/fcc-markdown-previewer/node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","webpack:///src/app/modules/files/files-routing.module.ts","webpack:///src/app/modules/files/files.component.ts","webpack:///src/app/modules/files/files.module.ts"],"names":["_c0","_c1","enterDuration","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","MAT_CHECKBOX_CLICK_ACTION","nextUniqueId","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","MatCheckboxChange","MatCheckboxBase","_elementRef","_MatCheckboxMixinBase","elementRef","_changeDetectorRef","_focusMonitor","_ngZone","tabIndex","_clickAction","_animationMode","_options","ariaLabel","ariaLabelledby","_uniqueId","id","labelPosition","name","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","parseInt","monitor","subscribe","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","stopMonitoring","disableRipple","disabled","detectChanges","value","checked","fn","isDisabled","indeterminate","newState","oldState","element","nativeElement","length","classList","remove","_getAnimationClassForCheckStateTransition","add","animationClass","runOutsideAngular","setTimeout","event","source","emit","stopPropagation","toggle","_transitionCheckState","_emitChangeEvent","_inputElement","origin","options","focusVia","animSuffix","nativeCheckbox","_required","newValue","changed","ɵfac","MatCheckbox_Factory","t","ɵcmp","type","selectors","viewQuery","MatCheckbox_Query","rf","ctx","_t","first","ripple","hostAttrs","hostVars","hostBindings","MatCheckbox_HostBindings","inputs","required","ariaDescribedby","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","trim","_getAriaChecked","_isRippleDisabled","directives","styles","encapsulation","changeDetection","ctorParameters","String","decorators","args","undefined","propDecorators","selector","host","providers","None","OnPush","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","ɵdir","_MatCheckboxRequiredValidatorModule","ɵmod","ɵinj","_MatCheckboxRequiredValidatorModule_Factory","ngJitMode","declarations","exports","MatCheckboxModule","MatCheckboxModule_Factory","imports","_MatMenu_ng_template_0_Template","_MatMenu_ng_template_0_Template_div_keydown_0_listener","ctx_r1","_handleKeydown","_MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","_MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_onAnimationStart","_MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","_onAnimationDone","ctx_r0","panelId","_classList","_panelAnimationState","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MAT_MENU_CONTENT","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","_portal","detach","_outlet","createElement","parentNode","insertBefore","outletElement","attach","next","isAttached","dispose","MatMenuContent_Factory","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","document","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","_getHostElement","focus","removeItem","complete","preventDefault","textNodeType","TEXT_NODE","output","childNodes","i","nodeType","MatMenuItem_Factory","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","_checkDisabled","MatMenuItem_mouseenter_HostBindingHandler","_handleMouseEnter","_getTabIndex","toString","attrs","MatMenuItem_Template","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","MAT_MENU_BASE_ELEVATION","menuPanelUid","_MatMenuBase","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","hasBackdrop","close","setPositionClasses","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","tabOut","changes","pipe","items","map","item","focusedItem","updateActiveItem","destroy","unsubscribe","itemChanges","_item","keyCode","manager","parentMenu","direction","setFirstItemActive","setLastItemActive","setFocusOrigin","onKeydown","lazyContent","onStable","asObservable","_focusFirstItem","activeItem","parentElement","getAttribute","setActiveItem","depth","elevation","Math","min","newElevation","customElevation","Object","keys","find","c","startsWith","_previousElevation","posX","posY","classes","_isAnimating","toState","activeItemIndex","scrollTop","_allItems","reset","filter","notifyOnChanges","previousPanelClass","_previousPanelClass","split","forEach","className","panelClass","_MatMenuBase_Factory","contentQueries","_MatMenuBase_ContentQueries","dirIndex","_MatMenuBase_Query","templateRef","descendants","MatMenu","MatMenu_Factory","ɵMatMenu_BaseFactory","_MatMenu","ngZone","defaultOptions","_MatMenu_Factory","_MatMenu_Template","data","animation","animations","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","triggersSubmenu","_scrollStrategy","_checkMenu","_handleHover","removeEventListener","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","positionStrategy","menu","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","menuOpen","_restoreFocus","_resetAnimation","_setIsMenuOpen","dir","_setMenuElevation","focusFirstItem","setElevation","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","button","toggleMenu","v","_menu","reason","_destroyMenu","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","_handleMousedown","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_handleClick","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","_MatMenuDirectivesModule_Factory","MatMenuModule","MatMenuModule_Factory","routes","path","component","FilesRoutingModule","forChild","selection","query$","FilesComponent","headerActions","fileService","orderBy$","files$","getFiles$","file","console","log","removeMultiple","selected","orderBy","query","searchFiles$","actionTemplate","clear","setTemplateRef$","FilesModule"],"mappings":"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","file":"modules-files-files-module-es5.js","sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * @breaking-change 10.0.0\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, \n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * @breaking-change 10.0.0\n     */\n    _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Whether the checkbox is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() { return this._checked; }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() { return this._indeterminate; }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(19, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, END, hasModifierKey, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }])] });\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]',\n                providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nclass MatMenuItemBase {\n}\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /** Focuses the menu item. */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        const element = this._elementRef.nativeElement;\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() { return this._xPosition; }\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() { return this._yPosition; }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() { return this._overlapTrigger; }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() { return this.panelClass; }\n    set classList(classes) { this.panelClass = classes; }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        const newElevation = `mat-elevation-z${elevation}`;\n        const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MAT_MENU_CONTENT,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MAT_MENU_CONTENT]\n        }] }); })();\n/** @docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs. */\nclass MatMenu extends _MatMenuBase {\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatMenu_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/** @docs-public MatMenu */\nclass _MatMenu extends MatMenu {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = () => this._openedBy = 'touch';\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() { return this._menu; }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe(reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false)\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /** Restores focus to the element that was focused before the menu was open. */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger, MatMenuContent]; }, exports: function () { return [MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ], CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu, MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FilesComponent } from './files.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FilesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FilesRoutingModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {\n  Observable,\n  ReplaySubject,\n  combineLatest,\n  BehaviorSubject\n} from 'rxjs';\nimport { take, mergeMap, distinctUntilChanged } from 'rxjs/operators';\nimport { HeaderActionsService } from '../../core/header/header-actions.service';\nimport { File } from '../../models/file';\nimport { FileService } from '../../services/file.service';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-files',\n  template: `\n    <ng-container *ngIf=\"files$ | async as files\">\n      <ng-container *ngIf=\"!files.length\">\n        <!-- TODO: center and add button -->\n        <div class=\"flex-center full-height\">\n          <div>\n            <h3>\n              No Files\n            </h3>\n            <p>\n              Create a new file, and click save and it will appear here\n            </p>\n          </div>\n        </div>\n      </ng-container>\n      <mat-list>\n        <mat-list-item *ngFor=\"let file of files\">\n          <div matLine>\n            <div class=\"flex-layout-row flex-align-center\">\n              <span>\n                <!-- TODO: add checkbox -->\n                <mat-checkbox\n                  color=\"primary\"\n                  aria-label=\"Select\"\n                  [checked]=\"selection.isSelected(file.id)\"\n                  (change)=\"selection.toggle(file.id)\"\n                >\n                </mat-checkbox>\n              </span>\n              <a [routerLink]=\"['/editor', file.id]\">\n                <div\n                  class=\"mat-subheading-1 no-margin\"\n                  style=\"margin-left: 8px\"\n                >\n                  {{ file.name }}\n                </div>\n              </a>\n              <span class=\"full-width\"></span>\n              <span>\n                <!-- TODO: add menu button -->\n                <button\n                  type=\"button\"\n                  mat-icon-button\n                  [matMenuTriggerFor]=\"menu\"\n                >\n                  <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                  <a mat-menu-item [routerLink]=\"['/editor', file.id]\">Edit</a>\n                  <button mat-menu-item (click)=\"remove(file)\">Remove</button>\n                </mat-menu>\n              </span>\n            </div>\n          </div>\n        </mat-list-item>\n      </mat-list>\n    </ng-container>\n    <a\n      aria-label=\"Create File\"\n      [routerLink]=\"['/editor']\"\n      mat-fab\n      title=\"Create File\"\n      class=\"fab\"\n    >\n      <mat-icon>add</mat-icon>\n    </a>\n    <ng-template #actionTemplate>\n      <span class=\"flex-layout-row align-center full-width\">\n        <span>\n          <input\n            type=\"text\"\n            autocomplete=\"off\"\n            (keyup)=\"query$.next(queryInput.value)\"\n            placeholder=\"Search\"\n            class=\"basic-input\"\n            #queryInput\n          />\n        </span>\n        <!-- TODO: sort by property? -->\n        <span class=\"full-width\"></span>\n        <span>\n          <button\n            *ngIf=\"selection.hasValue()\"\n            type=\"button\"\n            aria-label=\"Remove Selected\"\n            title=\"Remove Selected\"\n            (click)=\"removeSelected()\"\n            mat-icon-button\n          >\n            <mat-icon>delete</mat-icon>\n          </button>\n        </span>\n      </span>\n    </ng-template>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesComponent implements OnInit {\n  @ViewChild('actionTemplate') set actionTemplate(\n    actionTemplate: TemplateRef<any>\n  ) {\n    if (actionTemplate) {\n      this.headerActions.clear();\n      this.headerActions.setTemplateRef$(actionTemplate);\n    }\n  }\n  public selection = new SelectionModel<string>(true, []);\n  public query$ = new BehaviorSubject<string>('');\n  public orderBy$ = new BehaviorSubject<keyof File>('name');\n  public files$!: Observable<File[]>;\n  constructor(\n    private headerActions: HeaderActionsService,\n    private fileService: FileService\n  ) {}\n\n  ngOnInit(): void {\n    this.files$ = this.getFiles$();\n  }\n\n  remove(file: File) {\n    this.fileService\n      .remove(file.id)\n      .pipe(take(1))\n      .subscribe(() => console.log('removed single file', { file }));\n  }\n  removeSelected() {\n    this.fileService\n      .removeMultiple(this.selection.selected)\n      .pipe(take(1))\n      .subscribe(() => console.log('removed selected'));\n  }\n  private getFiles$(): Observable<File[]> {\n    return combineLatest([\n      this.orderBy$.pipe(distinctUntilChanged()),\n      this.query$.pipe(distinctUntilChanged())\n    ]).pipe(\n      mergeMap(([orderBy, query]) =>\n        this.fileService.searchFiles$({ orderBy, query })\n      )\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { RouterModule } from '@angular/router';\nimport { FilesRoutingModule } from './files-routing.module';\nimport { FilesComponent } from './files.component';\n\n@NgModule({\n  declarations: [FilesComponent],\n  imports: [\n    CommonModule,\n    FilesRoutingModule,\n    RouterModule,\n    // Angular Material\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatCheckboxModule\n  ]\n})\nexport class FilesModule {}\n"]}