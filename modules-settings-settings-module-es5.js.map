{"version":3,"sources":["webpack:///home/runner/work/fcc-markdown-previewer/fcc-markdown-previewer/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///home/runner/work/fcc-markdown-previewer/fcc-markdown-previewer/node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///home/runner/work/fcc-markdown-previewer/fcc-markdown-previewer/node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///home/runner/work/fcc-markdown-previewer/fcc-markdown-previewer/node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///home/runner/work/fcc-markdown-previewer/fcc-markdown-previewer/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","webpack:///src/app/modules/settings/settings-routing.module.ts","webpack:///src/app/modules/settings/settings.component.ts","webpack:///src/app/modules/settings/settings.module.ts","webpack:///src/app/services/fcc-test-suite.service.ts"],"names":["listenerOptions","passive","AutofillMonitor","_platform","_ngZone","_monitoredElements","Map","elementOrRef","isBrowser","element","info","get","subject","asObservable","result","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","complete","forEach","_info","stopMonitoring","ɵfac","AutofillMonitor_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","type","args","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","monitor","subscribe","emit","CdkAutofill_Factory","ɵdir","selectors","outputs","propDecorators","selector","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_document","_textareaElement","nativeElement","_measuringClass","FIREFOX","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","resizeToFitContent","window","_getWindow","pipe","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","removeChild","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","value","_minRows","_previousValue","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","setTimeout","undefined","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","inputs","enabled","exportAs","decorators","host","TextFieldModule","ɵmod","ɵinj","TextFieldModule_Factory","imports","ngJitMode","declarations","exports","_c0","_c1","_c2","_c3","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","nextUniqueId","MAT_ERROR","MatError","MatError_Factory","hostVars","MatError_HostBindings","features","provide","useExisting","providers","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MAT_PREFIX","MatPrefix","MatPrefix_Factory","MAT_SUFFIX","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","labelOptions","_dir","_defaults","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","markForCheck","ngControl","valueChanges","onStable","_prefixChildren","changes","_suffixChildren","_hintChildren","_processHints","_errorChildren","change","detectChanges","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","length","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","ids","_getDisplayedMessages","find","push","map","error","setDescribedByIds","labelEl","children","textContent","trim","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","i","offsetWidth","Math","abs","rect","right","left","getRootNode","rootNode","documentElement","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","ɵcmp","contentQueries","MatFormField_ContentQueries","dirIndex","_t","first","viewQuery","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","ngContentSelectors","decls","vars","consts","template","MatFormField_Template","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","styles","encapsulation","data","animation","changeDetection","String","descendants","animations","None","OnPush","MatFormFieldModule","MatFormFieldModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_formField","_uid","_disabled","_required","_type","_readonly","_neverEmptyInputTypes","filter","has","nodeName","toLowerCase","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","multiple","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","options","focus","isFocused","readonly","formField","_previousPlaceholder","setAttribute","removeAttribute","newValue","indexOf","validity","badInput","_ariaDescribedby","join","_id","_validateType","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","label","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","toString","errorStateMatcher","MatInputModule","MatInputModule_Factory","MatSelect_span_4_Template","ctx_r2","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","_handleKeydown","_getPanelTheme","_transformOrigin","_triggerFontSize","panelClass","matSelectAnimations","transformPanelWrap","optional","transformPanel","minWidth","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","deps","useFactory","MatSelectChange","source","MatSelectBase","_MatSelectMixinBase","MAT_SELECT_TRIGGER","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_viewportRuler","elementRef","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","defaults","_panelOpen","_scrollTop","_multiple","_compareWith","o1","o2","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","ariaLabel","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","panelOpen","overlayDir","offsetX","_triggerRect","trigger","_initKeyManager","changed","added","select","removed","deselect","_resetOptions","_initializeSelection","_keyManager","withTypeAhead","_typeaheadDebounceInterval","close","open","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayRef","overlayElement","_isRtl","_setSelectionByValue","fn","isDisabled","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","selected","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","positionChange","_calculateOverlayOffsetX","panel","scrollTop","Promise","resolve","then","_value","Array","isArray","clear","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","console","warn","withVerticalOrientation","withAllowedModifierKeys","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","optionGroups","_getItemHeight","reduce","current","index","itemHeight","items","_getItemCount","panelHeight","min","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","max","ariaLabelledby","_getAriaLabel","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","group","leftOverflow","rightOverflow","round","updatePosition","optionHeightAdjustment","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_placeholder","writeValue","selectedOptions","reverse","isEmpty","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","_getAriaActiveDescendant","disableRipple","compareWith","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","MatSelectModule","MatSelectModule_Factory","enterDuration","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","multi","MatSlideToggleChange","checked","MatSlideToggleBase","_MatSlideToggleMixinBase","_focusMonitor","_","_uniqueId","_checked","name","labelPosition","toggleChange","focusOrigin","_inputElement","stopPropagation","_emitChangeEvent","focusVia","MatSlideToggle_Factory","MatSlideToggle_Query","_thumbEl","_thumbBarEl","MatSlideToggle_HostBindings","MatSlideToggle_Template","MatSlideToggle_Template_input_change_4_listener","_onChangeEvent","MatSlideToggle_Template_input_click_4_listener","_onInputClick","MatSlideToggle_Template_span_cdkObserveContent_11_listener","_onLabelTextChange","_r4","inputId","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","MatSlideToggleRequiredValidator_Factory","ɵMatSlideToggleRequiredValidator_BaseFactory","_MatSlideToggleRequiredValidatorModule","_MatSlideToggleRequiredValidatorModule_Factory","MatSlideToggleModule","MatSlideToggleModule_Factory","routes","path","component","SettingsRoutingModule","forChild","SettingsComponent","appSettingsService","localForageService","fccTestSuiteService","fontSizes","themes","theme","display","takeUntil","fontSize$","getFontSize$","theme$","getTheme$","testSuiteHidden$","getTestSuiteHidden$","selectedFontSize","selectedTheme","unsubscribe","setDefaults","removeAll$","testSuiteHidden","setTestSuiteHidden","update","settings$","settings","changeFontSize","changeTheme","onTestSuiteHidden","setDefaultSettings","resetAllData","SettingsModule","FccTestSuiteService","testSuiteWrapperEl","getElementById","FCC_TEST_SUITE_WRAPPER_ID","log","isHidden","showTestSuite","hideTestSuite","Document"],"mappings":"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","file":"modules-settings-settings-module-es5.js","sourcesContent":["import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result.asObservable();\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat);\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map(error => error.id);\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputMixinBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // @breaking-change 8.0.0 `_formField` parameter to be made required.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    let el = event.target;\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const formField = this._formField;\n        const placeholder = (!formField || !formField._hideControlPlaceholder()) ? this.placeholder : null;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.MatFormField, 8)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Whether filling out the select is required in the form. */\n        this._required = false;\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** Whether the component is in multiple selection mode. */\n        this._multiple = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** The IDs of child options to be passed to the aria-owns attribute. */\n        this._optionIds = '';\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /** Whether the component is disabling centering of the active option over the trigger. */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        /** Aria label of the select. If not specified, the placeholder will be used as label. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        });\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n        this._setOptionIds();\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Records option IDs to pass to the aria-owns property. */\n    _setOptionIds() {\n        this._optionIds = this.options.map(option => option.id).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollActiveOptionIntoView() {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the index of the provided option in the option list. */\n    _getOptionIndex(option) {\n        return this.options.reduce((result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }, undefined);\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset = this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0]);\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /** Returns the aria-label of the select component. */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /** Returns the aria-labelledby of the select component. */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 11, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, take, takeUntil } from 'rxjs/operators';\nimport { AppSettingsService } from '../../services/app-settings.service';\nimport { FccTestSuiteService } from '../../services/fcc-test-suite.service';\nimport { LocalForageService } from '../../services/local-forage.service';\n\n@Component({\n  selector: 'app-settings',\n  template: `\n    <div class=\"margin flex-column\">\n      <section>\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n          <mat-label>\n            Font Size\n          </mat-label>\n          <select\n            matNativeControl\n            [value]=\"fontSize$ | async\"\n            (change)=\"changeFontSize(fontSizeInput.value)\"\n            #fontSizeInput\n          >\n            <option\n              *ngFor=\"let fontSize of fontSizes\"\n              [value]=\"fontSize\"\n              [ngStyle]=\"{ fontSize: fontSize }\"\n              [selected]=\"isFontSelected(fontSize)\"\n            >\n              {{ fontSize }}\n            </option>\n          </select>\n          <mat-hint>\n            The font size for the primary editor\n          </mat-hint>\n        </mat-form-field>\n      </section>\n      <section>\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n          <mat-label> App Theme </mat-label>\n          <select\n            matNativeControl\n            [value]=\"theme$ | async\"\n            (change)=\"changeTheme(themeInput.value)\"\n            #themeInput\n          >\n            <option\n              *ngFor=\"let theme of themes\"\n              [value]=\"theme.theme\"\n              [selected]=\"isThemeSelected(theme.theme)\"\n            >\n              {{ theme.display }}\n            </option>\n          </select>\n          <mat-hint>\n            The font size for the primary editor\n          </mat-hint>\n        </mat-form-field>\n      </section>\n      <section>\n        <mat-slide-toggle\n          [checked]=\"testSuiteHidden$ | async\"\n          (change)=\"onTestSuiteHidden(slideToggle.checked)\"\n          #slideToggle\n        >\n          Hide freeCodeCamp test suite\n        </mat-slide-toggle>\n      </section>\n      <section>\n        <div class=\"margin flex-layout-row align-center\">\n          <button\n            type=\"button\"\n            (click)=\"setDefaultSettings()\"\n            mat-raised-button\n          >\n            Reset to Defaults\n          </button>\n          <p>\n            Resets all settings on this page to their defaults\n          </p>\n        </div>\n        <div class=\"margin flex-layout-row align-center\">\n          <button\n            type=\"button\"\n            (click)=\"resetAllData()\"\n            color=\"warn\"\n            mat-raised-button\n          >\n            Reset All Data\n          </button>\n          <p>\n            Resets All data within the app, removes files and settings\n          </p>\n        </div>\n      </section>\n    </div>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  // TODO: Update later\n  public readonly fontSizes = ['14px', '16px', '20px', '24px', '32px'];\n  public readonly themes = [\n    {\n      theme: 'dark-theme',\n      display: 'Dark Theme'\n    },\n    {\n      theme: 'light-theme',\n      display: 'Light Theme'\n    },\n    {\n      theme: 'hacker-theme',\n      display: 'Hacker Theme'\n    }\n    // TODO: Add other themes\n  ];\n  public fontSize$!: Observable<string>;\n  public theme$!: Observable<string>;\n  public testSuiteHidden$!: Observable<boolean>;\n  private selectedFontSize!: string;\n  private selectedTheme!: string;\n  private takeUntil = new Subject();\n  constructor(\n    private appSettingsService: AppSettingsService,\n    private localForageService: LocalForageService,\n    private fccTestSuiteService: FccTestSuiteService\n  ) {}\n\n  ngOnInit(): void {\n    this.fontSize$ = this.getFontSize$();\n    this.theme$ = this.getTheme$();\n    this.testSuiteHidden$ = this.getTestSuiteHidden$();\n    this.fontSize$\n      .pipe(takeUntil(this.takeUntil))\n      .subscribe((fontSize) => (this.selectedFontSize = fontSize));\n    this.theme$\n      .pipe(takeUntil(this.takeUntil))\n      .subscribe((theme) => (this.selectedTheme = theme));\n  }\n  ngOnDestroy() {\n    this.takeUntil.next();\n    this.takeUntil.unsubscribe();\n  }\n  isFontSelected(fontSize: string) {\n    return fontSize === this.selectedFontSize;\n  }\n  isThemeSelected(theme: string) {\n    return theme === this.selectedTheme;\n  }\n  setDefaultSettings() {\n    this.appSettingsService\n      .setDefaults()\n      .pipe(take(1))\n      .subscribe(() => {});\n  }\n  resetAllData() {\n    this.localForageService.removeAll$.next();\n    // TODO: show prompt\n  }\n  onTestSuiteHidden(testSuiteHidden: boolean) {\n    this.fccTestSuiteService\n      .setTestSuiteHidden(testSuiteHidden)\n      .pipe(take(1))\n      .subscribe(() => {});\n  }\n  changeFontSize(fontSize: string) {\n    this.appSettingsService\n      .update({\n        fontSize\n      })\n      .pipe(take(1))\n      .subscribe(() => {});\n  }\n  changeTheme(theme: string) {\n    this.appSettingsService\n      .update({\n        theme\n      })\n      .pipe(take(1))\n      .subscribe(() => {});\n  }\n  private getFontSize$(): Observable<string> {\n    return this.appSettingsService.settings$.pipe(\n      map((settings) => settings.fontSize)\n    );\n  }\n  private getTheme$(): Observable<string> {\n    return this.appSettingsService.settings$.pipe(map(({ theme }) => theme));\n  }\n\n  private getTestSuiteHidden$(): Observable<boolean> {\n    return this.fccTestSuiteService.testSuiteHidden$;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n@NgModule({\n  declarations: [SettingsComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatSlideToggleModule\n  ]\n})\nexport class SettingsModule {}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport { AppSettingsService } from './app-settings.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FccTestSuiteService {\n  /**\n   * The id of the wrapper property for the\n   * fCC test suite\n   */\n  public static FCC_TEST_SUITE_WRAPPER_ID = 'fcc_test_suite_wrapper';\n  /**\n   * If the test suite is hidden/shown in the UI.\n   */\n  public testSuiteHidden$!: Observable<boolean>;\n  /**\n   * The wrapper element for the test suite\n   */\n  private testSuiteWrapperEl = this.document.getElementById(\n    FccTestSuiteService.FCC_TEST_SUITE_WRAPPER_ID\n  );\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private appSettingsService: AppSettingsService\n  ) {\n    console.log('test in fcc-test-suite', this.testSuiteWrapperEl);\n    this.testSuiteHidden$ = this.appSettingsService.settings$.pipe(\n      map(({ testSuiteHidden }) => testSuiteHidden)\n    );\n    // any-time the observable changes, update the dom\n    this.testSuiteHidden$.subscribe((testSuiteHidden) => {\n      if (!this.testSuiteWrapperEl) {\n        return;\n      }\n      testSuiteHidden\n        ? (this.testSuiteWrapperEl.style.display = 'none')\n        : (this.testSuiteWrapperEl.style.display = 'block');\n    });\n  }\n\n  /**\n   * Toggles the test-suite from being shown/hidden\n   */\n  public toggleTestSuite() {\n    this.testSuiteHidden$\n      .pipe(take(1))\n      .subscribe((isHidden) =>\n        isHidden ? this.showTestSuite() : this.hideTestSuite()\n      );\n  }\n\n  /**\n   * Hides the test-suite\n   */\n  public hideTestSuite() {\n    return this.appSettingsService.update({\n      testSuiteHidden: true\n    });\n  }\n\n  /**\n   * Shows the test-suite\n   */\n  public showTestSuite() {\n    return this.appSettingsService.update({\n      testSuiteHidden: false\n    });\n  }\n\n  public setTestSuiteHidden(testSuiteHidden: boolean) {\n    return this.appSettingsService.update({ testSuiteHidden });\n  }\n}\n"]}